<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:jdbc="http://www.springframework.org/schema/jdbc"
	xmlns:jee="http://www.springframework.org/schema/jee"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:util="http://www.springframework.org/schema/util"
	xmlns:jpa="http://www.springframework.org/schema/data/jpa"
	xsi:schemaLocation="
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
		http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc-3.2.xsd
		http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee-3.2.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.2.xsd
		http://www.springframework.org/schema/data/jpa http://www.springframework.org/schema/data/jpa/spring-jpa-1.3.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.2.xsd
		http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd
		http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd
		">
	<!-- Spring MVC -->
	<!-- 配置组件扫描 -->
	<context:component-scan base-package="com.bdxh.kmsale.controller,com.bdxh.kmsale.api" use-default-filters="false">
		<context:include-filter type="annotation" expression="org.springframework.stereotype.Controller" />
		<context:include-filter type="annotation" expression="org.springframework.web.bind.annotation.RestController" />
		<context:include-filter type="annotation" expression="org.springframework.web.bind.annotation.ControllerAdvice" />
		<context:include-filter type="annotation" expression="com.bdxh.kmsale.common.annotation.CheckUser"/>
	</context:component-scan>
	
	<aop:aspectj-autoproxy />

	<!-- 注解驱动 -->
	
    <mvc:annotation-driven >
       <mvc:message-converters register-defaults="true">
          <bean class="org.springframework.http.converter.StringHttpMessageConverter">
             <property name="supportedMediaTypes" value="text/plain;charset=UTF-8" />
          </bean>
          <bean class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">
				<property name="prettyPrint" value="true" />
				<property name="supportedMediaTypes">
					<list>
						<value>text/plain;charset=utf-8</value>
						<value>text/html;charset=utf-8</value>
						<value>text/json;charset=utf-8</value>
						<value>application/json;charset=utf-8</value>
					</list>
				</property>
				<!--<property name="objectMapper">
					<bean class="com.lirenkj.bdnav.web.utils.NonPropertyMapper"></bean>
				</property>-->
			</bean>
       </mvc:message-converters>   
    </mvc:annotation-driven>


	<!-- 启动SpringMVC的注解功能，完成请求和注解POJO的映射 -->
	<bean
		class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter">
		<property name="messageConverters">
			<list>
				<ref bean="mappingJacksonHttpMessageConverter" />   <!-- JSON转换器 -->
			</list>
		</property>
	</bean>
    
    <mvc:interceptors>
        <mvc:interceptor>
            <mvc:mapping path="/manage/**"/>
            <bean class="com.bdxh.kmsale.interceptor.OAuthInterceptor"/>
        </mvc:interceptor>
    </mvc:interceptors>        

	<!-- 4.定义跳转的文件的前后缀 ，视图模式配置 -->
	<bean id="viewResolver"
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="prefix" value="/WEB-INF/web/" />
		<property name="suffix" value=".jsp" />
	</bean>

	<!-- 配置文件上传-->
	<bean id="multipartResolver"
		class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<!-- 默认编码 -->
		<property name="defaultEncoding" value="utf-8" />
		<!-- 文件大小最大值 -->
		<property name="maxUploadSize" value="10485760000" />
		<!-- 内存中的最大值 -->
		<property name="maxInMemorySize" value="40960" />
	</bean>
	<bean
		class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter">
		<property name="messageConverters">
			<list>
				<bean
					class="org.springframework.http.converter.StringHttpMessageConverter">
					<property name="supportedMediaTypes">
						<list>
							<value>text/plain;charset=UTF-8</value>
						</list>
					</property>
				</bean>
			</list>
		</property>
	</bean>
	
	    <bean id="mappingJacksonHttpMessageConverter"
          class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">
        <property name="supportedMediaTypes">
            <list>
                <value>application/json;charset=UTF-8</value>
            </list>
        </property>
    </bean>
    
    <bean class="org.springframework.web.accept.ContentNegotiationManagerFactoryBean">
		<property name="favorPathExtension" value="true" />
		<property name="favorParameter" value="true" />
		<property name="ignoreAcceptHeader" value="true"></property>
		<property name="defaultContentType" value="text/html" />
		<property name="mediaTypes">
            <map>
				<!-- 告诉视图解析器，返回的类型为json格式 -->
				<entry key="json" value="application/json" />
				<entry key="xml" value="application/xml" />
				<entry key="htm" value="text/htm" />
				<entry key="file" value="application/octet-stream" />
				<entry key="image" value="image/*" />
			</map>
        </property>		
	</bean>

<!-- 
<configuration>
<settings>
<setting name="jdbcTypeForNull" value="NULL" />
</settings>
</configuration>


	定时器开关 <task:annotation-driven /> <bean id="springTask" class="com.park.serviceImpl.SpringTask"></bean> 
		<task:scheduled-tasks> <task:scheduled ref="springTask" method="TaskCarspace" 
		cron="5/3 * * * * ?" /> </task:scheduled-tasks>


	若只想使用Spring自身提供的缓存器,则注释掉下面的两个关于Ehcache配置的bean,并启用上面的SimpleCacheManager即可
	Spring提供的基于的Ehcache实现的缓存管理器 
	 <bean id="cacheManagerFactory" class="org.springframework.cache.ehcache.EhCacheManagerFactoryBean"> 
		<property name="configLocation" value="classpath:ehcache.xml"/> </bean> <bean 
		id="cacheManager" class="org.springframework.cache.ehcache.EhCacheCacheManager"> 
		<property name="cacheManager" ref="cacheManagerFactory"/> </bean> -->
</beans>